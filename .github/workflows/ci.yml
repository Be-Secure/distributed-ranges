on:
  push:
    branches:
      - main
  pull_request:

env:
  SPHINXOPTS: -q -W

jobs:
  checks:
    runs-on: dds-base
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - name: Checks
      run: |
        pre-commit run --all
    - name: Build doc
      run: |
        make -C doc/spec html

  examples:
    strategy:
      fail-fast: false
      matrix:
        include:
        - name: "CPU: clang++"
          cxx: clang++
          cc: clang
          runner: dds-base
          oneapi_device: cpu
        - name: "CPU: g++10"
          cxx: g++-10
          cc: gcc-10
          runner: dds-base
          oneapi_device: cpu
        - name: "CPU: icpx"
          cxx: icpx
          cc: icx
          runner: dds-base
          oneapi_device: cpu
        - name: "IGPU: icpx"
          cxx: icpx
          cc: icx
          runner: gpu
          oneapi_device: level_zero:gpu
    name: Build/test examples (${{ matrix.name }})
    runs-on: ${{ matrix.runner }}
    env:
      CXX: ${{ matrix.cxx }}
    steps:
    - uses: actions/checkout@v3
    - name: configure
      run: |
        source /opt/intel/oneapi/setvars.sh
        mkdir build
        cd build
        cmake ..
    - name: build
      run: |
        # proper cmake config does not require source setvars.sh
        cd build
        make -j all
    - name: test
      run: |
        source /opt/intel/oneapi/setvars.sh
        cd build
        ONEAPI_DEVICE_SELECTOR=${{ matrix.oneapi_device }} make test

  publish:
    needs: [checks, examples]
    runs-on: dds-base
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    - run: pip install -r requirements.txt
    - name: Checkout gh-pages
      uses: actions/checkout@v3
      with:
        ref: gh-pages
        path: gh-pages
    - name: Build docs
      run: |
        make -C doc/spec html
    - name: Publish to github pages
      run: |
        rm -rf gh-pages/*
        touch gh-pages/.nojekyll

        cp -r doc/spec/build/html gh-pages/spec
        cp -r doc/spec/build/doxygen-html gh-pages/doxygen

        cd gh-pages
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        # Ignore errors because no updates returns an error status.
        git commit --reset-author --amend -m "Update from github actions"
        git push --force origin gh-pages
