on:
  push:
    branches:
      - main
  pull_request:

env:
  SPHINXOPTS: -q -W

jobs:
  checks:
    runs-on: dds-base
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: pip install -r requirements.txt
    - name: Checks
      run: |
        pre-commit run --all
    - name: Build doc
      run: |
        make -C doc/spec html

  clang:
    runs-on: dds-base
    env:
      CXX: clang++
    steps:
    - uses: actions/checkout@v3
    - run: |
        source /opt/intel/oneapi/setvars.sh
        cmake -B build
        make -j -C build all test

  gcc:
    runs-on: dds-base
    env:
      CXX: g++-10
    steps:
    - uses: actions/checkout@v3
    - run: |
        source /opt/intel/oneapi/setvars.sh
        cmake -B build
        make -j -C build all test

  icpx:
    runs-on: dds-base
    env:
      CXX: icpx
    steps:
    - uses: actions/checkout@v3
    - run: |
        source /opt/intel/oneapi/setvars.sh
        cmake -B build
        make -j -C build all test

  icpx_igpu:
    runs-on: gpu
    env:
      CXX: icpx
    steps:
    - uses: actions/checkout@v3
    - run: |
        source /opt/intel/oneapi/setvars.sh
        cmake -B build
        ONEAPI_DEVICE_SELECTOR=level_zero:gpu make -j -C build all test

  icpx_dg2:
    runs-on: xpu1
    env:
      CXX: clang++
    steps:
    - uses: actions/checkout@v3
    - run: |
        source /opt/intel/oneapi/setvars.sh
        source /opt/intel/open-source-dpcpp/20221029/startup.sh
        cmake -B build -DENABLE_SYCL=ON
        make -j -C build all test

  cuda:
    runs-on: cuda
    env:
      CXX: g++-10
    steps:
    - uses: actions/checkout@v3
    - run: |
        cmake -B build
        make -j -C build all test

  publish:
    needs: [checks, clang, gcc, icpx, icpx_igpu, icpx_dg2, cuda]
    runs-on: dds-base
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: pip install -r requirements.txt
    - name: Build doc
      run: |
        make -C doc/spec html
    - name: Checkout gh-pages
      uses: actions/checkout@v3
      with:
        ref: gh-pages
        path: gh-pages
    - name: Publish to github pages
      run: |
        rm -rf gh-pages/*
        touch gh-pages/.nojekyll

        cp -r doc/spec/build/html gh-pages/spec
        cp -r doc/spec/build/doxygen-html gh-pages/doxygen

        cd gh-pages
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        # Ignore errors because no updates returns an error status.
        git commit --reset-author --amend -m "Update from github actions"
        git push --force origin gh-pages
